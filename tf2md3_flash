#!/bin/bash

if [ $# -lt 2 ]; then
  echo "USAGE: $0 /dev/ttyACM? firmware.bin" 1>&2
  exit 1
fi

device=$1
firmware=$2

if [[ ! -f ${firmware} ]]; then
  echo "${firmware} does not exist" 1>&2
  exit 1
fi

if [[ ! -a ${device} ]]; then
  echo "${device} does not exist" 1>&2
  exit 1
fi

shift 2

skip_erase=no
reset=no
while [ $# -gt 0 ]
do
  case "$1" in
    "--erased")
      skip_erase=yes;;
    "--reset")
      reset=yes;;
    *)
      echo "Unknown option: $1" >&2
      exit 1;;
  esac
  shift
done

wait_ret(){
  while read -t 1.5 retval; do
    if [[ $retval == '00P' ]]; then return 1; fi
    if [[ $retval == '01Q' ]]; then return 0; fi
    if [[ $retval == '0Ee' ]]; then return 0; fi
  done < $1
  return 0
}
wait_echo(){
  sleep $1
  echo $2 > $3
  return 0
}


if [ ${skip_erase} = "no" ]; then
  echo "Erasing flash..."
  stty -F ${device} raw -echo
  echo > ${device}
  while read -t 1 ret < ${device}; do sleep 0; done

  wait_ret ${device} & pid=$!
  wait_echo 0.5 '$FLASHERACEA' ${device} &
  wait $pid
  ret=$?
  if [[ $ret -ne 1 ]]; then
    echo "Failed to erase flash ($ret)" 1>&2
    echo "If the flash is already erased, please try " 1>&2
    echo " $0 ${device} ${firmware} --erased" 1>&2
    exit 1
  fi

  wait_ret ${device} & pid=$!
  wait_echo 0.5 '$FLASHERACEB' ${device} &
  wait $pid
  ret=$?
  if [[ $ret -ne 1 ]]; then
    echo "Failed to erase flash ($ret)" 1>&2
    exit 1
  fi

  echo "Flash erased"
  sleep 2
else
  echo "Flash erase skipped"
fi

echo "Writing firmware..."
cat <<EOD > /tmp/.samba_cmd.tmp
flash 0x00100000 ${firmware}
nvm 4
EOD

samba -i ${device} --source=/tmp/.samba_cmd.tmp
ret=$?

rm /tmp/.samba_cmd.tmp
if [[ $ret -ne 0 ]]; then
  echo "Failed to write firmware ($ret)" 1>&2
  exit 1
fi

if [ ${reset} = "yes" ]; then
  echo "Resetting MCU..."
  cat <<EOD > /tmp/.samba_reset.tmp
reset
EOD
  samba -i ${device} --source=/tmp/.samba_reset.tmp
  ret=$?

  rm /tmp/.samba_reset.tmp
  if [[ $ret -ne 0 ]]; then
    echo "Failed to reset MCU ($ret)" 1>&2
    exit 1
  fi
fi
